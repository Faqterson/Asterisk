[exten]
    exten => s,1,Gosub(check-record,s,1)
    exten => s,n,Playtones(400*33/400,0/200,400*33/400,0/2000)
    exten => s,n,NoOp(AVAILORIGCHAN = ${AVAILORIGCHAN})
    exten => s,n,Set(EXT=${ARG1})
    exten => s,n,Set(ARG1=)
    exten => s,n,Set(OPTIONS=${ARG2})
    exten => s,n,Set(ARG2=)
    exten => s,n,Set(DEV=${EXT})
    exten => s,n,Set(DND=${ODBC_DND(${EXT})})
    exten => s,n,ChanIsAvail(PJSIP/${DEV},s)
    exten => s,n,Noop(${AVAILSTATUS})
    exten => s,n,Set(TIME=${ODBC_global(FORWARD_TIMEOUT)})
    exten => s,n,Set(CW=${ODBC_callwaiting(${EXT})})
    exten => s,n,Set(temp=${CUT(BLINDTRANSFER,-,1)})
    exten => s,n,Set(RETURN=${CUT(temp,/,2)})
    exten => s,n,Set(CF=${ODBC_callforwarddst(${EXT})})
    exten => s,n,GotoIf($[${CF}!=0]?s-CF,1)
    exten => s,n,Set(CFBU=${ODBC_callforwardbusydst(${EXT})})
    exten => s,n,GotoIf($["${CFBU}"!="0"]?s-CFBU,1)
    exten => s,n,GotoIf($["${VM_INFO(${EXT},exists)}"="1"]?s-VM,1)
    exten => s,n,GotoIf($["${RETURN}"="${EXT}"]?s-DIAL,1)
    exten => s,n,GotoIf(${RETURN}?s-RETURN,1)
    exten => s,n,GotoIf($[${DND}=yes]?s-DND,1)
    exten => s,n,GotoIf($[$[${CW}]&$[${AVAILSTATUS}>1]]?s-BUSY,1)
    exten => s,n,Goto(s-DIAL,1)
    exten => s,n,Busy(10)
    exten => s-DIAL,1,Dial(PJSIP/${DEV},300,tTr${OPTIONS})
    exten => s-DIAL,n,GotoIf($[$[${CW}]&$[${AVAILSTATUS}>1]]?s-BUSY,1)
    exten => s-DIAL,n,GotoIf(${AVAILSTATUS}=5]?s-BUSY,1)
    exten => s-DIAL,n,GotoIf($[${CFBU}!=0]?s-CFBU,5)

    exten => s-CF,1,Playback(pls-wait-connect-call)
    exten => s-CF,n,Set(CFEXT=${EXT})
    exten => s-CF,n,Goto(extensions,${CF},1)

    exten => s-CFBU,1,GotoIf($[${DND}=yes]?s-CFBU,5)
    exten => s-CFBU,n,GotoIf($[$[${CW}]&$[${AVAILSTATUS}>1]]?s-CFBU,5)
    exten => s-CFBU,n,Set(FORWARD_TIMEOUT=${ODBC_global(FORWARD_TIMEOUT)})
    exten => s-CFBU,n,Dial(PJSIP/${DEV},${FORWARD_TIMEOUT},tTr${OPTIONS})
    exten => s-CFBU,n,Playback(pls-wait-connect-call)
    exten => s-CFBU,n,Set(CFEXT=${EXT})
    exten => s-CFBU,n,Goto(extensions,${CFBU},1)

    exten => s-VM,1,GotoIf($[${DND}=yes]?s-VM-UNAV,1)
    exten => s-VM,n,GotoIf($[$[${CW}]&$[${AVAILSTATUS}>1]]?s-VM-BUSY,1)
    exten => s-VM,n,Set(VOICEMAIL_TIMEOUT=${ODBC_global(VOICEMAIL_TIMEOUT)})
    exten => s-VM,n,Dial(PJSIP/${DEV},${VOICEMAIL_TIMEOUT},tTr${OPTIONS})
    exten => s-VM,n,GotoIf($["${DIALSTATUS}"="BUSY"]?s-VM-BUSY,1)
    exten => s-VM,n,Goto(s-VM-UNAV,1)
    exten => s-VM-BUSY,1,Gosub(voicemail,s,1(${EXT},b))
    exten => s-VM-BUSY,n,Hangup
    exten => s-VM-UNAV,1,Gosub(voicemail,s,1(${EXT},u))
    exten => s-VM-UNAV,n,Hangup

    exten => s-DND,1,NoOp(DND)
    exten => s-DND,n,Busy

    exten => s-BUSY,1,NoOp(BUSY)
    exten => s-BUSY,n,GotoIf($[${CFBU}!=0]?s-CFBU,1)
    exten => s-BUSY,n,Busy(5)

    exten => s-RETURN-UNAV,1,Set(CALLERID(name)=${EXT} UNAVAILABLE)
    exten => s-RETURN-UNAV,n,Goto(extensions,${RETURN},1)
    exten => s-RETURN-BUSY,1,Set(CALLERID(name)=${EXT} BUSY)
    exten => s-RETURN-BUSY,n,Goto(extensions,${RETURN},1)
    exten => s-RETURN-DND,1,Set(CALLERID(name)=${EXT} DND)
    exten => s-RETURN-DND,n,Goto(extensions,${RETURN},1)
    exten => s-RETURN-NOANSWER,1,Set(CALLERID(name)=${EXT} NO ANSWER)
    exten => s-RETURN-NOANSWER,n,Goto(extensions,${RETURN},1)

    exten => s-RETURN,1,Set(ORIGINAL=${CALLERID(name)})
    exten => s-RETURN,n,GotoIf($[${CFBU}!=0]?s-CFBU,1)
    exten => s-RETURN,n,GotoIf($[${DND}=yes]?s-RETURN-DND,1)
    exten => s-RETURN,n,GotoIf($[$[${CW}]&$[${AVAILSTATUS}>1]]?s-RETURN-BUSY,1)
    exten => s-RETURN,n,Set(RETURN_TIMEOUT=${ODBC_global(RETURN_TIMEOUT)})
    exten => s-RETURN,n,Dial(PJSIP/${DEV},${RETURN_TIMEOUT},tTr${OPTIONS})
    exten => s-RETURN,n,GotoIf($["${DIALSTATUS}"="BUSY"]?s-RETURN-BUSY,1)
    exten => s-RETURN,n,GotoIf($["${DIALSTATUS}"="NOANSWER"]?s-RETURN-NOANSWER,1)
    exten => s-RETURN,n,Wait(2)
    exten => s-RETURN,n,Goto(s-RETURN-UNAV,1)

[check-record]
        exten => s,1,Set(RECORD=${ODBC_global(RECORD)})
        exten => s,n,GotoIf($[${RECORD}=YES]?3:6)
        exten => s,n,Set(EXISTS=${STAT(e,/var/spool/asterisk/monitor/${CDR(uniqueid)}.wav)})
        exten => s,n,GotoIf(${EXISTS}?6)
        exten => s,n,MixMonitor(${CDR(uniqueid)}.wav,ab,/usr/local/scripts/convert ${CDR(uniqueid)})
        exten => s,n,NoOp(RECORD: ${RECORD})
        exten => s,n,Return()

[check-pin]
        exten => s,1,GotoIf($[${ODBC_requirepin(${CALLERID(num)})}=yes]?s-pin,2)
        exten => s,n,Gosub(check-barring,s,1(${ARG1}))
        exten => s,n,Return()

        exten => s-pin,1,Playback(auth-incorrect)
        exten => s-pin,n,Read(PIN,vm-password)
        exten => s-pin,n,GotoIf($[${PIN}]?s-pin,4:s-pin,1)
        exten => s-pin,n,GotoIf($[${ODBC_namebasedonpin(${PIN})}]?s-pinbarring,1:s-pin,1)
        exten => s-pin,n,Return()

        exten => s-pinbarring,1,Set(CHANNEL(accountcode)=${PIN})
        exten => s-pinbarring,n,Set(CDR(userfield)=${ODBC_namebasedonpin(${PIN})})
        exten => s-pinbarring,n,Gosub(check-barring-pin,s,1(${ARG1},${PIN}))
        exten => s-pinbarring,n,Return()

[check-barring]
        exten => s,1,ExecIf($[${LEN(${CFEXT})}=0]?Set(EXT=${CALLERID(num)}))
        exten => s,n,GotoIf($["${ARG1}"="*40"]?s-Internal,1)
        exten => s,n,GotoIf($["${ARG1}"="*90"]?s-Internal,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=01]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=02]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=03]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=04]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=05]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=06]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=080]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=086]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=087]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=088]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=089]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:1}=1]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=07]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=08]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=00]?s-International,1)
        exten => s,n,Return()

        exten => s-Internal,1,NoOp(The number is a cell number)
        exten => s-Internal,n,GotoIf($["${FORWARDING}"="yes"]?s-Internal,6)
        exten => s-Internal,n,GotoIf($["${ODBC_barringinternal(${EXT})}"="yes"]?s-Internal,6)
        exten => s-Internal,n,Playback(feature-not-avail-line)
        exten => s-Intertal,n,Hangup
        exten => s-Internal,n,NoOp(User is Allowed to call Cellphones)
        exten => s-Internal,n,Return()

        exten => s-Cell,1,NoOp(The number is a cell number)
        exten => s-Cell,n,GotoIf($["${FORWARDING}"="yes"]?s-Cell,6)
        exten => s-Cell,n,GotoIf($[${ODBC_barringcellular(${EXT})}=yes]?s-Cell,6)
        exten => s-Cell,n,Playback(feature-not-avail-line)
        exten => s-Cell,n,Hangup
        exten => s-Cell,n,NoOp(User is Allowed to call Cellphones)
        exten => s-Cell,n,Return()

        exten => s-National,1,NoOp(The number is a national number)
        exten => s-National,n,GotoIf($["${FORWARDING}"="yes"]?s-National,6)
        exten => s-National,n,GotoIf($[${ODBC_barringnational(${EXT})}=yes]?s-National,6)
        exten => s-National,n,Playback(feature-not-avail-line)
        exten => s-National,n,Hangup
        exten => s-National,n,NoOp(User is Allowed to call National)
        exten => s-National,n,Return()

        exten => s-International,1,NoOp(The number is a international number)
        exten => s-International,n,GotoIf($["${FORWARDING}"="yes"]?s-International,6)
        exten => s-International,n,GotoIf($[${ODBC_barringinternational(${EXT})}=yes]?s-International,6)
        exten => s-International,n,Playback(feature-not-avail-line)
        exten => s-International,n,Hangup
        exten => s-International,n,NoOp(User is Allowed to call International)
        exten => s-International,n,Return()

[check-barring-pin]
        exten => s,1,GotoIf($["${ARG1}"="*40"]?s-Internal,1)
        exten => s,n,GotoIf($["${ARG1}"="*90"]?s-Internal,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=01]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=02]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=03]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=04]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=05]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=06]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=080]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=086]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=087]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=088]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:3}=089]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:1}=1]?s-National,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=07]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=08]?s-Cell,1)
        exten => s,n,GotoIf($[${ARG1:0:2}=00]?s-International,1)
        exten => s,n,Return()

        exten => s-Internal,1,NoOp(The number is a cell number)
        exten => s-Internal,n,GotoIf($["${FORWARDING}"="yes"]?s-Internal,6)
        exten => s-Internal,n,GotoIf($[${ODBC_barringinternalpin(${ARG2})}=yes]?s-Internal,6)
        exten => s-Internal,n,Playback(feature-not-avail-line)
        exten => s-Internal,n,Hangup
        exten => s-Internal,n,NoOp(User is Allowed to call Cellphones)
        exten => s-Internal,n,Return()

        exten => s-Cell,1,NoOp(The number is a cell number)
        exten => s-Cell,n,GotoIf($["${FORWARDING}"="yes"]?s-Cell,6)
        exten => s-Cell,n,GotoIf($[${ODBC_barringcellularpin(${ARG2})}=yes]?s-Cell,6)
        exten => s-Cell,n,Playback(feature-not-avail-line)
        exten => s-Cell,n,Hangup
        exten => s-Cell,n,NoOp(User is Allowed to call Cellphones)
        exten => s-Cell,n,Return()

        exten => s-National,1,NoOp(The number is a national number)
        exten => s-National,n,GotoIf($["${FORWARDING}"="yes"]?s-National,6)
        exten => s-National,n,GotoIf($[${ODBC_barringnationalpin(${ARG2})}=yes]?s-National,6)
        exten => s-National,n,Playback(feature-not-avail-line)
        exten => s-National,n,Hangup
        exten => s-National,n,NoOp(User is Allowed to call National)
        exten => s-National,n,Return()

        exten => s-International,1,NoOp(The number is a international number)
        exten => s-International,n,GotoIf($["${FORWARDING}"="yes"]?s-International,6)
        exten => s-International,n,GotoIf($[${ODBC_barringinternationalpin(${ARG2})}=yes]?s-International,6)
        exten => s-International,n,Playback(feature-not-avail-line)
        exten => s-International,n,Hangup
        exten => s-International,n,NoOp(User is Allowed to call International)
        exten => s-International,n,Return()

[set-outcallerid]
    exten => s,1,ExecIf($[${LEN(${CFEXT})}=0]?Set(EXT=${CALLERID(num)}))
    exten => s,n,Set(callerid=${ODBC_outcallerid(${EXT})})
    exten => s,n,Execif($[$[${LEN(${callerid})}=0] | $["${callerid}"="NULL"]]?SET(callerid=${EXT}))
    exten => s,n,Set(CALLERID(num)=${callerid})
    exten => s,n,Return()

[set-trunk]
    exten => s,1,ExecIf($[${LEN(${CFEXT})}=0]?Set(EXT=${CALLERID(num)}))
    exten => s,n,Set(department=${ODBC_department(${EXT})})
    exten => s,n,ExecIf($["${FORWARDING}"="yes"]?Set(ARRAY(CALLERID,department)=${ODBC_cloudcall(${CALLERID(num)})}))
    exten => s,n,ExecIf($["${FORWARDING}"="yes"]?Set(ARRAY(forwarder,department)=${ODBC_get-forwarders(${ID})}))
    exten => s,n,Set(CHANNEL(musicclass)=${department})
    exten => s,n,GotoIf($[${LEN(${department})}=0]?s-global,1)
    exten => s,n,Set(TRUNK=${ODBC_dep_trunk(${department})})
    exten => s,n,Set(FAILTRUNK=${ODBC_dep_failtrunk(${department})})
    exten => s,n,GotoIf($[$["${TRUNK}"="Use Global"] | $[${LEN(${TRUNK})}=0]]?s-global,1)
    exten => s,n,Return()

    exten => s-global,1,Set(TRUNK=${ODBC_global(TRUNK)})
    exten => s-global,n,Set(FAILTRUNK=${ODBC_global(FAILTRUNK)})
    exten => s-global,n,Return()

[check-queueout]
    exten => s,1,Set(DIALER=${CALLERID(num)})
    exten => s,n,Set(queue_out=${ODBC_get-queue_out(${DIALER})})
    exten => s,n,Gotoif($[$[${LEN(${queue_out})}=0] | $["${queue_out}"="NULL"]]?s-NO,1:s-OK,1)
    exten => s,n,Return()

    exten => s-NO,1,Set(__QUEUE_OUT=outbound)
    exten => s-NO,n,Return()

    exten => s-OK,1,Set(__QUEUE_OUT=${queue_out})
    exten => s-OK,n,Return()

[connected]
    exten => s,1,Set(AGENT=${ARG1})
    exten => s,n,Set(HOLDTIME=$[${EPOCH}-${ARG2}])
    exten => s,n,System(echo "${EPOCH}|${ARG3}|${QUEUE_OUT}|${AGENT}|CONNECT|${HOLDTIME}|${ARG3}|${HOLDTIME}" >> /var/log/asterisk/queue_log)
    exten => s,n,Return()

[trunk]
    exten => s,1,Gosub(check-record,s,1)
    exten => s,n,Set(AGENT=PJSIP/${CALLERID(num)})
    exten => s,n,Set(__NUM=${ARG1})
    exten => s,n,Set(CHANNEL(hangup_handler_push)=hdlr3,h,1)
    exten => s,n,Execif(${BLINDTRANSFER}?Set(temp=${CUT(BLINDTRANSFER,-,1)}))
    exten => s,n,Execif(${FORWARDERNAME}?Set(temp=${CUT(FORWARDERNAME,-,1)}))
    exten => s,n,Execif($[$[${LEN(${FORWARDERNAME})}>1]|$[${LEN(${BLINDTRANSFER})}>1]]?Set(EXT=${CUT(temp,/,2)}))
    exten => s,n,Execif($[$[${LEN(${FORWARDERNAME})}>1]|$[${LEN(${BLINDTRANSFER})}>1]]?Set(CFEXT=${CUT(temp,/,2)}))
    exten => s,n,Gosub(check-pin,s,1(${ARG1}))
    exten => s,n,Gosub(check-queueout,s,1)
    exten => s,n,Gosub(set-trunk,s,1)
    exten => s,n,Gosub(set-outcallerid,s,1)
    exten => s,n,System(echo "${EPOCH}|${UNIQUEID}|${QUEUE_OUT}|${AGENT}|CALLOUTBOUND||${ARG1}" >> /var/log/asterisk/queue_log)
    exten => s,n,Dial(${STRREPLACE(TRUNK,"dst",${ARG1})},300,TU(connected,${AGENT},${EPOCH},${UNIQUEID}))
    exten => s,n,Dial(${STRREPLACE(FAILTRUNK,"dst",${ARG1})},300,TU(connected,${AGENT},${EPOCH},${UNIQUEID}))
    exten => s,n,Busy

[hdlr3]
    exten => h,1,GotoIf(${QUEUE_OUT}?h-QUEUE,1)
    exten => h-QUEUE,1,GotoIf($[${DIALSTATUS}=ANSWER]?h-QUEUE-ANSWER,1:h-QUEUE-ABANDON,1)
    exten => h-QUEUE-ANSWER,1,Set(CALLTIME=${ANSWEREDTIME})
    exten => h-QUEUE-ANSWER,2,Set(HOLDTIME=$[${DIALEDTIME}-${ANSWEREDTIME}])
    exten => h-QUEUE-ANSWER,3,System(echo "${EPOCH}|${UNIQUEID}|${QUEUE_OUT}|${AGENT}|COMPLETECALLER|${HOLDTIME}|${CALLTIME}" >> /var/log/asterisk/queue_log)
    exten => h-QUEUE-ANSWER,4,Return
    exten => h-QUEUE-ABANDON,1,Set(HOLDTIME=0)
    exten => h-QUEUE-ABANDON,2,System(echo "${EPOCH}|${UNIQUEID}|${QUEUE_OUT}|${AGENT}|ABANDON|1|1|${HOLDTIME}" >> /var/log/asterisk/queue_log)
    exten => h-QUEUE-ABANDON,3,Return

[agents]
    exten => _X.,1,Set(channel=${ODBC_check-agent-channel(${EXTEN})})
    exten => _X.,n,Gosub(exten,s,1(${channel}))

[forwarders]
    exten => _X.,1,Set(FORWARDING=yes)
    exten => _x.,n,Goto(extensions,${EXTEN},1)

[agent-login]
    exten => s,1,Answer
    exten => s,n,Read(agent,agent-user)
    exten => s,n,GotoIf($[${agent}!=${CALLERID(num)}]?s-DYNAMIC,1)
    exten => s,n,AddQueueMember(${ARG1},PJSIP/${CALLERID(num)},2)
    exten => s,n,Playback(agent-loginok)
    exten => s,n,Hangup

    exten => s-DYNAMIC,1,Set(agentpass=${ODBC_get-agent-pass(${agent})})
    exten => s-DYNAMIC,n,Set(channel=${ODBC_check-agent-channel(${agent})})
    exten => s-DYNAMIC,n,GotoIf($[${channel}]?s-LOGGED-IN,1)
    exten => s-DYNAMIC,n,Read(password,vm-password)
    exten => s-DYNAMIC,n,GotoIf($[${password}=${agentpass}]?s-OK,1)
    exten => s-DYNAMIC,n,Playback(vm-incorrect)
    exten => s-DYNAMIC,n,Congestion(10)
    
    exten => s-LOGGED-IN,1,Read(agent,agent-alreadyon)
    exten => s-LOGGED-IN,n,Goto(s,2)

    exten => s-OK,1,Set(ODBC_set-agent-channel()=${agent},${CALLERID(num)})
    exten => s-OK,n,AddQueueMember(${ARG1},Local/${agent}@agents,2,,,PJSIP/${CALLERID(num)})
    exten => s-OK,n,Playback(agent-loginok)
    exten => s-OK,n,Hangup

[agent-logoff]
    exten => s,1,Answer
    exten => s,n,Read(agent,agent-user)
    exten => s,n,GotoIf($[${agent}!=${CALLERID(num)}]?s-DYNAMIC,1)
    exten => s,n,RemoveQueueMember(${ARG1},PJSIP/${CALLERID(num)})
    exten => s,n,Playback(agent-loggedoff)
    exten => s,n,Hangup

    exten => s-DYNAMIC,1,Set(agentpass=${ODBC_get-agent-pass(${agent})})
    exten => s-DYNAMIC,n,Read(password,vm-password)
    exten => s-DYNAMIC,n,GotoIf($[${password}=${agentpass}]?s-OK,1)
    exten => s-DYNAMIC,n,Playback(vm-incorrect)
    exten => s-DYNAMIC,n,Congestion(10)

    exten => s-OK,1,Set(ODBC_set-agent-channel()=${agent},)
    exten => s-OK,n,RemoveQueueMember(${ARG1},Local/${agent}@agents)
    exten => s-OK,n,Playback(agent-loggedoff)
    exten => s-OK,n,Hangup 

[agent-pause]
    exten => s,1,Set(EXT=${CALLERID(num)})
    exten => s,n,PauseQueueMember(,PJSIP/${EXT},,${ARG1})
    exten => s,n,NoOp(${PQMSTATUS})
    exten => s,n,GotoIf($[${PQMSTATUS}=NOTFOUND]?s-DYNAMIC,1)
    exten => s,n,Playback(dictate/paused)
    exten => s,n,Playback(ha/on)
    exten => s,n,Hangup

    exten => s-DYNAMIC,1,Set(agent=${ODBC_get-agent(${CALLERID(num)})})
    exten => s-DYNAMIC,n,GotoIf(${agent}?s-DYNAMIC,3:s-NOT-LOGGED-IN,1)
    exten => s-DYNAMIC,n,PauseQueueMember(,Local/${agent}@agents,,${ARG1})
    exten => s-DYNAMIC,n,Playback(dictate/paused)
    exten => s-DYNAMIC,n,Playback(ha/on)
    exten => s-DYNAMIC,n,Hangup

    exten => s-NOT-LOGGED-IN,1,Playback(agent-incorrect)
    exten => s-NOT-LOGGED-IN,2,Hangup 

[agent-unpause]
    exten => s,1,Set(EXT=${CALLERID(num)})
    exten => s,n,UnPauseQueueMember(,PJSIP/${EXT})
    exten => s,n,NoOp(${UPQMSTATUS})
    exten => s,n,GotoIf($[${UPQMSTATUS}=NOTFOUND]?s-DYNAMIC,1)
    exten => s,n,Playback(dictate/paused)
    exten => s,n,Playback(de-activated)
    exten => s,n,Hangup

    exten => s-DYNAMIC,1,Set(agent=${ODBC_get-agent(${CALLERID(num)})})
    exten => s-DYNAMIC,n,GotoIf(${agent}?s-DYNAMIC,3:s-NOT-LOGGED-IN,1)
    exten => s-DYNAMIC,n,UnPauseQueueMember(,Local/${agent}@agents,,${ARG1})
    exten => s-DYNAMIC,n,Playback(dictate/paused)
    exten => s-DYNAMIC,n,Playback(de-activated)
    exten => s-DYNAMIC,n,Hangup

    exten => s-NOT-LOGGED-IN,1,Playback(agent-incorrect)
    exten => s-NOT-LOGGED-IN,2,Hangup 

[voicemail]
    exten => s,1,Background(vm-theperson,m,,extensions)
    exten => s,n,Set(ARG1=${ARG1})
    exten => s,n,Set(ARG2=${ARG2})
    exten => s,n,SayDigits(${ARG1})
    exten => s,n,Gotoif($[${ARG2} = u]?unavail)
    exten => s,n(busy),Background(vm-isonphone,m,,extensions)
    exten => s,n,Goto(vmail)
    exten => s,n+1(unavail),Background(vm-isunavail,m,,extensions)
    exten => s,n(vmail),Background(to-reach-operator,m,,extensions)
    exten => s,n,Background(press-9,m,,extensions)
    exten => s,n,Background(or,m,,extensions)
    exten => s,n,Background(vm-intro,m,,extensions)
    exten => s,n,WaitExten(1)
    exten => s,n(skip),Voicemail(${ARG1},s)
    exten => s,n(invalid),Congestion(5)

[record-prompt]
    exten => s,1,Answer
    exten => s,2,Playback(vm-intro)
    exten => s,3,Record(custom/${ARG1}.WAV)
    exten => s,4,Playback(auth-thankyou)
    exten => s,5,Playback(custom/${ARG1})
    exten => s,6,Playback(vm-goodbye)
    exten => s,7,Hangup

[get-ip]
    exten => s,1,Set(IP=${CUT(SIPURI,@,2)})
    exten => s,2,Set(IP=${CUT(IP,:,1)})

[conference]
    exten => s,1,Gosub(check-record,s,1(${CALLERID(num)},${ARG1}))
    exten => s,n,ConfBridge(${ARG1})

[queue]
    exten => s,1,Answer
    exten => s,n,Gosub(check-record,s,1)
;    exten => s,n,Set(CHANNEL(hangup_handler_push)=hdlrqueue,h,1)
    exten => s,n,Set(ARRAY(QF,OPTIONS,FORWARD_TIMEOUT)=${ODBC_queueinfo(${ARG1})})
    exten => s,n,GotoIf($[${QF}==yes]?s-QF,1)
    exten => s,n,Set(__QUEUE=${ARG1})
    exten => s,n,Set(ARG1=)
    exten => s,n,Set(MACRO=${ARG2})
    exten => s,n,Set(ARG2=)
    exten => s,n,Queue(${QUEUE},${OPTIONS}tTi,,,,,,,,)

    exten => s-QF,1,Set(__QUEUE=${ARG1})
    exten => s-QF,n,Set(ARG1=)
    exten => s-QF,n,Set(MACRO=${ARG2})
    exten => s-QF,n,Set(ARG2=)
    exten => s-QF,n,Queue(${QUEUE},${OPTIONS}tTi,,,${FORWARD_TIMEOUT},,${MACRO},,,)
    exten => s-QF,n,GotoIf($["${QUEUESTATUS}"="TIMEOUT"]?s-TIMEOUT,1)

    exten => s-TIMEOUT,1,Set(ARRAY(destination,data)=${ODBC_queueforward(${QUEUE})})
    exten => s-TIMEOUT,n,ExecIf($["${destination}"="extensions"]?Gosub(get-exten,s,1(${data})))
    exten => s-TIMEOUT,n,ExecIf($["${destination}"="queues"]?Gosub(get-queue,s,1(${data})))
    exten => s-TIMEOUT,n,ExecIf($["${destination}"="operator"]?Goto(operator,${EXTEN},1))
    exten => s-TIMEOUT,n,ExecIf($["${destination}"="forwarders"]?Gosub(get-forwarders,s,1(${data})))

;[hdlrqueue]
;    exten => h,1,Set(QUEUE_MEMBER(${QUEUE},penalty,${AGENT})=2)

[survey]
    exten => s,1,Set(NAME=${ARG1})
    exten => s,n,Set(NUMQS=${ARG2})
    exten => s,n,Set(temp=${CUT(BLINDTRANSFER,-,1)})
    exten => s,n,Set(AGENT=${CUT(temp,/,2)})
    exten => s,n,Playback(custom/surveys/${NAME}/intro)
    exten => s,n,Playback(silence/1)
    exten => s,n,Set(i=1)
    exten => s,n,While($[${i} <= ${NUMQS}])
    exten => s,n,Read(ANSWER${i},custom/surveys/${NAME}/${i},1)
    exten => s,n,Set(ANSWERS=${ANSWERS}${ANSWER${i}})
    exten => s,n,Playback(silence/1)
    exten => s,n,Set(i=$[${i} + 1])
    exten => s,n,EndWhile
    exten => s,n,Set(ODBC_survey(${NAME})=${CDR(clid)},${CDR(src)},${CHANNEL(LINKEDID)},${ANSWERS},${AGENT})
    exten => s,n,Playback(custom/surveys/${NAME}/exit)
    exten => s,n,Hangup

[cloudcall]
    exten => s,1,Set(ARRAY(CALLERID,DEPARTMENT)=${ODBC_cloudcall(${CALLERID(num)})})
    exten => s,n,GotoIf(${department}?s-DEP,1)
    exten => s,n,Set(EXT=${ODBC_defaultcli(DEFAULTCLI)})
    exten => s,n,Set(DEFAULTCLI=${ODBC_defaultcli(DEFAULTCLI)})
    exten => s,n,NoOp(CLOUDCALL: ${CALLERID})
    exten => s,n,GotoIf($[${CALLERID}]?s-CLOUDCALL,1)
    exten => s,n,Busy(10)

    exten => s-DEP,1,Set(EXT=${ODBC_department-defaultcli(DEFAULTCLI,${department})})
    exten => s-DEP,n,Set(DEFAULTCLI=${ODBC_department-defaultcli(DEFAULTCLI,${DEPARTMENT})})
    exten => s-DEP,n,GotoIf($[$["${EXT}"="Use Global"] | $[${LEN(${EXT})}=0]]?s,4)
    exten => s-DEP,n,NoOp(CLOUDCALL: ${CALLERID})
    exten => s-DEP,n,GotoIf($[${CALLERID}]?s-CLOUDCALL,1)
    exten => s-DEP,n,Busy(10)

    exten => s-CLOUDCALL,1,System(echo "CallerID: ${CALLERID} <${DEFAULTCLI}>" > /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Channel: LOCAL/${CALLERID(num)}@cloudcall/n" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "MaxRetries: 0" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "RetryTime: 10" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "WaitTime: 60" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Context: extensions" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Extension: ${CALLERID(num)}" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Priority: 1" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Setvar: ORIGINNUMBER=${CALLERID(num)}" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Setvar: FORWARDING=yes" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(echo "Setvar: CDR(userfield)=${CALLERID(num)}" >> /var/spool/asterisk/tmp/${UNIQUEID}.call)
    exten => s-CLOUDCALL,n,System(mv /var/spool/asterisk/tmp/${UNIQUEID}.call /var/spool/asterisk/outgoing/)
    exten => s-CLOUDCALL,n,Busy(10)

[internalmacros]
;Voicemail
    exten => *10,1,Answer
    exten => *10,n,VoicemailMain(${CALLERID(num)})
    exten => *10,n,Hangup

;DND on/off
    exten => *40,1,Gosub(check-pin,s,1(${EXTEN}))
    exten => *40,n,Set(DND=${ODBC_DND(${CALLERID(num)})})
    exten => *40,n,Playback(do-not-disturb)
    exten => *40,n,GotoIf($[${DND}=yes]?*40-DND,1)
    exten => *40,n,Set(ODBC_updatednd(${CALLERID(num)})=yes)
    exten => *40,n,PauseQueueMember(,PJSIP/${CALLERID(num)})
    exten => *40,n,Playback(activated)
    exten => *40,n,Hangup
    exten => *40-DND,1,Set(ODBC_updatednd(${CALLERID(num)})=no)
    exten => *40-DND,n,UnPauseQueueMember(,PJSIP/${CALLERID(num)})
    exten => *40-DND,n,Playback(de-activated)
    exten => *40-DND,n,Hangup

;Call forward Feature
    exten => *41,1,SET(CF=${ODBC_callforwarddst(${CALLERID(num)})})
    exten => *41,n,SET(CFBU=${ODBC_callforwardbusydst(${CALLERID(num)})})

    exten => *41,n,GotoIf($[${CF}=0]?*41-CHK,1)
    exten => *41,n,Set(ODBC_updatecallforward(${CALLERID(num)})=0)
    exten => *41,n,Playback(call-forwarding)
    exten => *41,n,Playback(de-activated)
    exten => *41,n,Hangup
    exten => *41-CHK,1,GotoIf($[${CFBU}=0]?*41-NON,1)
    exten => *41-CHK,n,Set(ODBC_updatecallforwardbusy(${CALLERID(num)})=0)
    exten => *41-CHK,n,Playback(call-forwarding)
    exten => *41-CHK,n,Playback(de-activated)
    exten => *41-CHK,n,Hangup

    exten => *41-NON,1,Background(press-1)
    exten => *41-NON,n,Background(call-fwd-unconditional)
    exten => *41-NON,n,Background(press-2)
    exten => *41-NON,n,Background(call-fwd-on-busy)
    exten => *41-NON,n,Wait(3)
    exten => *41-NON,n,Background(press-1)
    exten => *41-NON,n,Background(call-fwd-unconditional)
    exten => *41-NON,n,Background(press-2)
    exten => *41-NON,n,Background(call-fwd-on-busy)
    exten => *41-NON,n,Hangup

    exten => 1,1,Read(FWDST,number)
    exten => 1,n,NOOP(${FWDST})
    exten => 1,n,Set(ODBC_updatecallforward(${CALLERID(num)})=${FWDST})
    exten => 1,n,Playback(call-forwarding)
    exten => 1,n,Playback(activated)
    exten => 1,n,Hangup

    exten => 2,1,Read(FWDST,number)
    exten => 2,n,NOOP(${FWDST})
    exten => 2,n,Set(ODBC_updatecallforwardbusy(${CALLERID(num)})=${FWDST})
    exten => 2,n,Playback(call-forwarding)
    exten => 2,n,Playback(activated)
    exten => 2,n,Hangup

; Speed dials
    exten => _**X.,1,Set(number=${ODBC_speeddial(${EXTEN:2})})
    exten => _**X.,n,Set(FORWARDING=yes)
    exten => _**X.,n,GotoIf(${number}?extensions,${number},1)
    exten => _**X.,n,Playback(pbx-invalid)

; Echo test
    exten => *43,1,Playback(demo-echotest)
    exten => *43,n,Set(TIMEOUT(absolute)=60)
    exten => *43,n,Echo()
    exten => *43,n,Hangup

; Say time
    exten => *60,1,Answer
    exten => *60,n,Playback(at-tone-time-exactly)
    exten => *60,n,SayUnixTime(,,IMp)
    exten => *60,n,Playback(vm-and)
    exten => *60,n,SayUnixTime(,,S)
    exten => *60,n,Playback(beep)
    exten => *60,n,Hangup

; Say extension
    exten => *65,1,Answer
    exten => *65,n,Playback(your)
    exten => *65,n,Playback(extension)
    exten => *65,n,Playback(number)
    exten => *65,n,Playback(is)
    exten => *65,n,SayDigits(${CALLERID(num)})
    exten => *65,n,Wait(2)
    exten => *65,n,Hangup

; Say IP address
    exten => *66,1,Answer
    exten => *66,n,Playback(your)
    exten => *66,n,Playback(address)
    exten => *66,n,Playback(is)
    exten => *66,n,Set(IP=${CHANNEL(rtp,dest)})
    exten => *66,n,Set(IP=${CUT(IP,:,1)})
    exten => *66,n,SayAlpha(${IP})
    exten => *66,n,Wait(1)
    exten => *66,n,Hangup

;Play Mucis on hold
    exten => *70,1,Answer
    exten => *70,n,Set(department=${ODBC_department(${CALLERID(num)})})
    exten => *70,n,MusicOnhold(${department})
    exten => *70,n,Hangup

; Agent Functions
    exten => *603,1,Gosub(agent-pause,s,1)
    exten => _*603X,1,Gosub(agent-pause,s,1(${EXTEN:4}))
    exten => *604,1,Gosub(agent-unpause,s,1)

; Conference
    exten => _*8XX,1,GotoIf($["${RECORD}"="YES"]?${EXTEN},2:${EXTEN},3)
    exten => _*8XX,2,MixMonitor(${UNIQUEID}.WAV,b)
    exten => _*8XX,3,Gosub(conference,s,1(${EXTEN}))

; Nightmode
    exten => *90*90,1,Goto(*90,1)

    exten => *90,1,Gosub(check-pin,s,1(${EXTEN}))${department}
    exten => *90,n,Set(department=${ODBC_department(${CALLERID(num)})})
    exten => *90,n,GotoIf(${department}?*90-DEP,1)
    exten => *90,n,Set(nightmode=${ODBC_nightmode(NIGHTMODE)})
    exten => *90,n,GotoIf($[${nightmode}=YES]?*90-ON,1)
    exten => *90,n,Set(ODBC_updatenightmode(NIGHTMODE)=YES)
    exten => *90,n,Set(DEVICE_STATE(Custom:*90@hints)=RINGING)
    exten => *90,n,Playback(evening)
    exten => *90,n,Playback(service)
    exten => *90,n,Playback(ha/on)
    exten => *90,n,Hangup

    exten => *90-ON,1,Playback(time)
    exten => *90-ON,n,Playback(service)
    exten => *90-ON,n,Playback(ha/on)
    exten => *90-ON,n,Set(ODBC_updatenightmode(NIGHTMODE)=NO)
    exten => *90-ON,n,Set(DEVICE_STATE(Custom:*90@hints)=NOT_INUSE)
    exten => *90-ON,n,Hangup

    exten => *90-DEP,1,Set(nightmode=${ODBC_department-nightmode(NIGHTMODE,${department})})
    exten => *90-DEP,n,GotoIf($[${nightmode}=YES]?*90-DEP-ON,1)
    exten => *90-DEP,n,Set(ODBC_department-updatenightmode(NIGHTMODE)=YES,${department})
    exten => *90-DEP,n,Set(DEVICE_STATE(Custom:*90@hints)=RINGING)
    exten => *90-DEP,n,Playback(evening)
    exten => *90-DEP,n,Playback(service)
    exten => *90-DEP,n,Playback(ha/on)
    exten => *90-DEP,n,Hangup

    exten => *90-DEP-ON,1,Playback(time)
    exten => *90-DEP-ON,n,Playback(service)
    exten => *90-DEP-ON,n,Playback(ha/on)
    exten => *90-DEP-ON,n,Set(ODBC_department-updatenightmode(NIGHTMODE)=NO,${department})
    exten => *90-DEP-ON,n,Set(DEVICE_STATE(Custom:*90@hints)=NOT_INUSE)
    exten => *90-DEP-ON,n,Hangup
